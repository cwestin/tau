(*) Implement pxChannel
- need abstract interface
- need concrete class for intra-loom communication
- need concrete class for iter-loom communication
  - will use pthreads primitives for synchronization?

(*) modify pxHashableVar to pxBoxedNative
- use this to send and receive scalars on a channel

(*) undo the excessive compilation independence of pxAllocLocal
- this won't be exposed in tau space, and won't change much, so might as well
  make things easy and avoid guessing how much space is required after overhead

(*) clean up testpxLoom TODOs
- all for cloning

(*) Implement pxLoom
- implement a monitor
- select from one of multiple channels

(*) Define file headers
- Add and document throughout (in progress)
- set up for doxygen (early experiments not great; considering)

(*) implement pxString
- can use this for pxHashMapLocal keys

(*) Finish pxHashMapLocal
- should I really finish this? Or should this be implemented in tau space now
  that I have pxHm for clone's use?
  - YES: would be a good way to experiment with iterators and their ability to
    operate over the channel boundary when the hashmap is remote
- fix average bucket size handling similar to pxHm
- requires cloning objects to clone the key into the right arena

(*) makemake to handle transitive dependencies

(*) make pxLoom work across threads
- pthreads, or apr?

(*) Implement pxFile, pxInputStream, pxOutputStream
- Use aio.h for reading and writing files, integrate with pxLoom
  - is this just inter-loom communication? Or is there a thread dedicated to
    i/o?

(*) Build simple starter lexer
- jlex, flex, or antlr4?

(*) Build simple parser for single file program
- CUPS, bison, or antlr4?

(*) Generate C code for simple program
Write script to complete build pipeline to generate an executable

(*) Use tcmalloc for pxAllocSystem's implementation?
